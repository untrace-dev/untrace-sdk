name: Elixir SDK Test

on:
  push:
    branches:
      - main
    paths:
      - 'sdks/elixir/**'
  pull_request:
    branches:
      - main
    paths:
      - 'sdks/elixir/**'
  workflow_dispatch:

permissions:
  contents: read

env:
  FORCE_COLOR: 3
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  test:
    name: Test Elixir SDK
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir-version: ['1.14', '1.15', '1.16']
        otp-version: ['25', '26']

    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir-version }}
          otp-version: ${{ matrix.otp-version }}

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: sdks/elixir/deps
          key: ${{ runner.os }}-elixir-${{ matrix.elixir-version }}-${{ matrix.otp-version }}-${{ hashFiles('sdks/elixir/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-elixir-${{ matrix.elixir-version }}-${{ matrix.otp-version }}-
            ${{ runner.os }}-elixir-${{ matrix.elixir-version }}-
            ${{ runner.os }}-elixir-

      - name: Install dependencies
        working-directory: sdks/elixir
        run: |
          mix deps.get
          mix deps.compile

      - name: Run tests
        working-directory: sdks/elixir
        run: |
          mix test --cover

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: sdks/elixir/cover/excoveralls.json
          flags: elixir-sdk
          name: elixir-sdk-coverage
          fail_ci_if_error: false

  lint:
    name: Lint Elixir SDK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.16'
          otp-version: '26'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: sdks/elixir/deps
          key: ${{ runner.os }}-elixir-1.16-26-${{ hashFiles('sdks/elixir/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-elixir-1.16-26-
            ${{ runner.os }}-elixir-1.16-
            ${{ runner.os }}-elixir-

      - name: Install dependencies
        working-directory: sdks/elixir
        run: |
          mix deps.get
          mix deps.compile

      - name: Run linting
        working-directory: sdks/elixir
        run: |
          mix format --check-formatted
          mix credo --strict
          mix dialyzer

  docs:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Setup Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.16'
          otp-version: '26'

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: sdks/elixir/deps
          key: ${{ runner.os }}-elixir-1.16-26-${{ hashFiles('sdks/elixir/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-elixir-1.16-26-
            ${{ runner.os }}-elixir-1.16-
            ${{ runner.os }}-elixir-

      - name: Install dependencies
        working-directory: sdks/elixir
        run: |
          mix deps.get
          mix deps.compile

      - name: Build documentation
        working-directory: sdks/elixir
        run: |
          mix docs

      - name: Upload documentation artifact
        uses: actions/upload-artifact@v4
        with:
          name: elixir-sdk-docs
          path: sdks/elixir/doc/
          retention-days: 30
