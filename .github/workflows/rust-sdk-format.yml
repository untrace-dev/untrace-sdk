name: Rust SDK Format

on:
  push:
    branches:
      - main
    paths:
      - 'sdks/rust/**'
  pull_request:
    branches:
      - main
    paths:
      - 'sdks/rust/**'
  workflow_dispatch:

permissions:
  contents: read

env:
  FORCE_COLOR: 3
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  format:
    name: Format Rust SDK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          override: true

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            sdks/rust/target
          key: ${{ runner.os }}-rust-stable-${{ hashFiles('sdks/rust/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-stable-
            ${{ runner.os }}-rust-

      - name: Install dependencies
        working-directory: sdks/rust
        run: cargo fetch

      - name: Check formatting
        working-directory: sdks/rust
        run: cargo fmt -- --check

      - name: Format code (if check fails)
        working-directory: sdks/rust
        run: |
          if ! cargo fmt -- --check; then
            echo "Code formatting issues found. Running cargo fmt..."
            cargo fmt
            echo "Code has been formatted. Please commit the changes."
            exit 1
          else
            echo "Code is properly formatted."
          fi

  clippy:
    name: Clippy Lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            sdks/rust/target
          key: ${{ runner.os }}-rust-stable-${{ hashFiles('sdks/rust/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-stable-
            ${{ runner.os }}-rust-

      - name: Install dependencies
        working-directory: sdks/rust
        run: cargo fetch

      - name: Run clippy
        working-directory: sdks/rust
        run: cargo clippy --all-targets --all-features -- -D warnings

  docs:
    name: Documentation Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            sdks/rust/target
          key: ${{ runner.os }}-rust-stable-${{ hashFiles('sdks/rust/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-stable-
            ${{ runner.os }}-rust-

      - name: Install dependencies
        working-directory: sdks/rust
        run: cargo fetch

      - name: Check documentation
        working-directory: sdks/rust
        run: cargo doc --no-deps --document-private-items

      - name: Check doctests
        working-directory: sdks/rust
        run: cargo test --doc
