name: C# SDK Release

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Changeset NPM Release"]
    types:
      - completed
    branches:
      - main

permissions:
  contents: write
  packages: write
  actions: read

env:
  FORCE_COLOR: 3
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      is_version_bump: ${{ steps.check.outputs.is_version_bump }}
      csharp_version_changed: ${{ steps.check-csharp.outputs.version_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - id: check
        run: |
          if [[ "${{ github.event.workflow_run.head_commit.message }}" =~ ^chore:\ version\ packages.*$ ]]; then
            echo "is_version_bump=true" >> $GITHUB_OUTPUT
          else
            echo "is_version_bump=false" >> $GITHUB_OUTPUT
          fi

      - id: check-csharp
        name: Check if C# SDK version changed
        run: |
          # Check if the C# SDK version was bumped in Untrace.csproj
          if git diff HEAD~1 HEAD -- sdks/csharp/Untrace.csproj | grep -q 'Version>'; then
            echo "version_changed=true" >> $GITHUB_OUTPUT
            echo "C# SDK version was changed in Untrace.csproj"
          else
            echo "version_changed=false" >> $GITHUB_OUTPUT
            echo "C# SDK version was not changed in Untrace.csproj"
          fi

  release:
    name: Release C# SDK
    needs: check-version
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.is_version_bump == 'true' && needs.check-version.outputs.csharp_version_changed == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          # Need full history for Changesets
          fetch-depth: 0

      - name: Setup Environment
        uses: ./.github/actions/setup

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Get version from package.json
        id: version
        run: |
          VERSION=$(node -p "require('./sdks/csharp/package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Restore dependencies
        working-directory: sdks/csharp
        run: dotnet restore

      - name: Build C# package
        working-directory: sdks/csharp
        run: dotnet build --configuration Release

      - name: Pack C# package
        working-directory: sdks/csharp
        run: dotnet pack --configuration Release --output ./packages

      - name: Publish to NuGet
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: |
          cd sdks/csharp
          dotnet nuget push ./packages/*.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: csharp-sdk-v${{ steps.version.outputs.version }}
          name: C# SDK v${{ steps.version.outputs.version }}
          body: |
            Release of C# SDK v${{ steps.version.outputs.version }}

            This release includes:
            - C# SDK package published to NuGet
            - Version: ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
